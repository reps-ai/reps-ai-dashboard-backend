services:
  # FastAPI application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    container_name: reps-ai-backend

  # Redis service (message broker)
  redis:
    image: redis:7
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    container_name: reps-ai-redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 3

  # Celery worker for lead tasks
  celery-worker-lead:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A backend.celery_app.app worker -Q lead_tasks -l INFO -c 2
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    container_name: reps-ai-celery-lead

  # Celery worker for call tasks
  celery-worker-call:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A backend.celery_app.app worker -Q call_tasks -l DEBUG -c 2
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    container_name: reps-ai-celery-call

  # Celery worker for report and notification tasks
  celery-worker-reports:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A backend.celery_app.app worker -Q reports_tasks,notification_tasks -l INFO -c 2
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    container_name: reps-ai-celery-reports

  # Celery worker for campaign tasks
  celery-worker-campaign:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A backend.celery_app.app worker -Q campaign_tasks -l INFO
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - WORKER_CONCURRENCY=2
    depends_on:
      - redis
    restart: unless-stopped
    container_name: reps-ai-celery-campaign

  # Celery beat scheduler for periodic tasks
  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile.dev
    command: celery -A backend.celery_app.app beat -l INFO
    volumes:
      - .:/app
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - redis
    restart: unless-stopped
    container_name: reps-ai-celery-beat

volumes:
  redis-data:
